#!/bin/sh

# Script written by Benjamin Trigona-Harany (bosth@alumni.sfu.ca)
# based on rubygem template by vbatts

PRGNAM=rubygem-xapian-full
VERSION=${VERSION:-1.2.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

SRCNAM=xapian-full

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG $TMP/$SRCNAM-$VERSION
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

DESTDIR=$( ruby -r rbconfig -e '
include RbConfig
printf("%s/%s/gems/%s\n",
	CONFIG["libdir"],
	CONFIG["RUBY_INSTALL_NAME"],
	CONFIG["ruby_version"]
      )
')

# print a friendly warning of unsatisfied dependencies
gem specification $CWD/$SRCNAM-$VERSION.gem | \
	ruby -r yaml -r rbconfig -e '
obj = YAML::load($stdin)
obj.ivars["dependencies"].each {|d|
	if not(d.ivars["type"] == :runtime)
		next
	end

  name = d.ivars["name"]
	begin
		require name
	rescue LoadError
		$stderr.write("WARNING: #{name} gem not found\n")
		sleep 0.5
	end
}'

gem unpack $CWD/$SRCNAM-$VERSION.gem
cd $SRCNAM-$VERSION

mkdir -p $PKG/$DESTDIR/specifications
mv $SRCNAM.gemspec $PKG/$DESTDIR/specifications/$SRCNAM-$VERSION.gemspec

( tar xvf xapian-core-$VERSION.tar.gz
  cd xapian-core-$VERSION
  chown -R root:root .
  CFLAGS="${SLKCFLAGS}" \
  CPPFLAGS="${SLKCFLAGS}" \
  ./configure \
    --prefix=$DESTDIR/gems/$SRCNAM-$VERSION \
    --libdir=$DESTDIR/gems/$SRCNAM-$VERSION/lib \
    --disable-static \
    --disable-documentaion \
    --build=$ARCH-slackware-linux

  make
  make install DESTDIR=$PKG
)

( tar xvf xapian-bindings-$VERSION.tar.gz
  cd xapian-bindings-$VERSION
  chown -R root:root .
  CFLAGS="${SLKCFLAGS} -I$PKG/$DESTDIR/gems/$SRCNAM-$VERSION/include -L$PKG/$DESTDIR/gems/$SRCNAM-$VERSION/lib" \
  LDFLAGS="${SLKCFLAGS} -L$PKG/$DESTDIR/gems/$SRCNAM-$VERSION/lib" \
  CPPFLAGS="-I$PKG/$DESTDIR/gems/$SRCNAM-$VERSION/include -L$PKG/$DESTDIR/gems/$SRCNAM-$VERSION/lib" \
  XAPIAN_CONFIG="`pwd`/../xapian-core-$VERSION/xapian-config" \
  ./configure \
    --prefix=$DESTDIR/gems/$SRCNAM-$VERSION \
    --with-ruby \
    --build=$ARCH-slackware-linux || exit

  make
  make install DESTDIR=$PKG

  mv $PKG/$DESTDIR/../../site_ruby/*/xapian.rb $PKG/$DESTDIR/gems/$SRCNAM-$VERSION/lib
  mv $PKG/$DESTDIR/../../site_ruby/*/*/_xapian.so $PKG/$DESTDIR/gems/$SRCNAM-$VERSION/lib
  rm -rf $PKG/$DESTDIR/../../site_ruby
)

# Don't need this
rm -rf $PKG/$DESTDIR/gems/$SRCNAM-$VERSION/share

# Strip binaries and libraries.
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/bindings
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/core

(cd xapian-bindings-$VERSION
cp -a ChangeLog COPYING HACKING INSTALL NEWS README TODO \
	$PKG/usr/doc/$PRGNAM-$VERSION/bindings)
(cd $PKG/$DESTDIR/gems/$SRCNAM-$VERSION/xapian-core-*
cp -a ChangeLog COPYING HACKING INSTALL NEWS README \
	$PKG/usr/doc/$PRGNAM-$VERSION/core)
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c y $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
