#!/bin/sh

# Copyright 2012-2015 Edward W. Koenig, Vancouver, WA, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# nvidia-switch utility 2.6
#
# A tool to install and cleanly remove the nvidia driver without stomping on the xorg files.
# Note: this tool "should" allow switching on the fly, but why? Pick a driver! You will still
# need to edit a bunch of other config files.

# TO-DO: needs more cleanup; still way too brittle.
# NOTE: non-GLVND ONLY!!

ROOT="${ROOT:-/}"
CWD=$(pwd)
LIBSUFFIX="LIBDIRSUFFIX" # This will be replaced in the build script
COMPAT32="LIB32FLAG" # This will be replaced in the build script (yes | no)
INC="${ROOT}usr/include/GL"
LIB="${ROOT}usr/lib${LIBSUFFIX}"
LIB32="${ROOT}usr/lib"
XMOD="${LIB}/xorg/modules"
XLIB="$XMOD/extensions"
NV_VERSION="PKGVERSION" # This will be replaced in the build script
GL_VERSION="1.2.0"
NV_CONF="/usr/share/X11/xorg.conf.d/10-nvidia.conf"

save_GL(){
  cd $2
  if [ "$1" = "nvidia" ]; then
    mv libGL.so.$GL_VERSION libGL.so.$GL_VERSION-xorg
    mv libGL.la libGL.la-xorg 
    mv libGL.la-nvidia libGL.la
    ln -sf libGL.so.$NV_VERSION libGL.so.1
    ln -sf libGL.so.$NV_VERSION libGL.so

    mv libEGL.so.1.0.0 libEGL.so.1.0.0-xorg
    mv libEGL.so.1-nvidia libEGL.so.1.0.0
    ln -sf libEGL.so.1.0.0 libEGL.so.1
    ln -sf libEGL.so.1.0.0 libEGL.so

    mv libGLESv1_CM.so.1.1.0 libGLESv1_CM.so.1.1.0-xorg
    mv libGLESv1_CM.so.1-nvidia libGLESv1_CM.so.1.1.0
    ln -sf libGLESv1_CM.so.1.1.0 libGLESv1_CM.so
    ln -sf libGLESv1_CM.so.1.1.0 libGLESv1_CM.so.1

    mv libGLESv2.so.2.0.0 libGLESv2.so.2.0.0-xorg
    mv libGLESv2.so.2-nvidia libGLESv2.so.2.0.0
    ln -sf libGLESv2.so.2.0.0 libGLESv2.so.2
    ln -sf libGLESv2.so.2.0.0 libGLESv2.so
  fi

  if [ "$1" = "xorg" ]; then
     mv libGL.la libGL.la-nvidia
     mv libGL.la-xorg libGL.la
     mv libGL.so.$GL_VERSION-xorg libGL.so.$GL_VERSION
     ln -sf libGL.so.$GL_VERSION libGL.so.1
     ln -sf libGL.so.$GL_VERSION libGL.so

     mv libEGL.so.1.0.0 libEGL.so.1-nvidia
     mv libEGL.so.1.0.0-xorg libEGL.so.1.0.0
     ln -sf libEGL.so.1.0.0 libEGL.so.1
     ln -sf libEGL.so.1.0.0 libEGL.so

     mv libGLESv1_CM.so.1.1.0 libGLESv1_CM.so.1-nvidia
     mv libGLESv1_CM.so.1.1.0-xorg libGLESv1_CM.so.1.1.0
     ln -sf libGLESv1_CM.so.1.1.0 libGLESv1_CM.so.1
     ln -sf libGLESv1_CM.so.1.1.0 libGLESv1_CM.so

     mv libGLESv2.so.2.0.0 libGLESv2.so.2-nvidia
     mv libGLESv2.so.2.0.0-xorg libGLESv2.so.2.0.0
     ln -sf libGLESv2.so.2.0.0 libGLESv2.so.2
     ln -sf libGLESv2.so.2.0.0 libGLESv2.so
  fi
  cd "$CWD"
}

save_glx(){
  cd "$XLIB"
  if [ "$1" = "nvidia" ]; then
	mv libglx.so libglx.so-xorg
	mv libglx.so.$NV_VERSION-nvidia libglx.so.$NV_VERSION
	ln -sf libglx.so.$NV_VERSION libglx.so
  fi
  if [ "$1" = "xorg" ]; then
	mv libglx.so.$NV_VERSION libglx.so.$NV_VERSION-nvidia
	rm -f libglx.so
	mv libglx.so-xorg libglx.so
  fi
cd "$CWD"
}

nvidia_ldconfig(){
   /sbin/ldconfig
   #Generate correct symink for that lib
   /sbin/ldconfig -l $1
}

nvidia_install(){
  echo $'Installing to nvidia-driver files!\n'
  echo "Make sure the nvidia driver is ENABLED in /etc/X11/xorg.conf"
  echo "and in /etc/X11/xorg.conf.d."
  echo "Otherwise, this may lead to improperly working drivers."

  save_glx "nvidia"
  save_GL "nvidia" $LIB
# Check for multilib configuration
  if [ "$COMPAT32" = "yes" ]; then
    save_GL "nvidia" $LIB32
  fi
}

nvidia_remove(){
  echo $'Returning to stock xorg files!\n'
  echo "Make sure the nvidia driver is DISABLED in /usr/share/X11/xorg.conf.d"
  echo "/etc/X11/xorg.conf and in /etc/X11/xorg.conf.d."
  echo "Otherwise, this may lead to improperly working drivers."

  save_glx "xorg"
  save_GL "xorg" $LIB

  # Kill dangling symlinks; 
  rm -f $LIB/libnvidia*.so.1
  rm -f $LIB/libvdpau_nvidia.so.1
  rm -f $LIB/libcuda.so.1

# Check for multilib configuration
  if [ "$COMPAT32" = "yes" ]; then
    save_GL "xorg" $LIB32
#   remove dangling symlinks
    rm -f $LIB32/libnvidia*.so.1
    rm -f $LIB32/libvdpau_nvidia.so.1
    rm -f $LIB32/libcuda.so.1
  fi

  if [ -e $NV_CONF ]; then
    echo "removing $NV_CONF: you will need to provide your own"
    echo "or reinstall nvidia-driver."
    rm -f $NV_CONF
  fi
}

restore(){
# Attempts to reinstall damaged stock packages if something went wrong. 
# Obviously, you will need to run this after '--remove' and before 
# 'removepkg nvidia-driver'.
# User must:
# 1. remove any dangling symlinks and *-xorg, *-nvidia files in /usr/lib?/,
#    and any other housekeeping tasks.
# 2. copy stock Slackware packages to /root/Slackware
# 3. be running STOCK Slackware-14.2
# 4. realize that COMPAT32 is not supported ;-)

if [ "$LIBSUFFIX" = "64" ]; then
  ARCH="x86_64"
else
  ARCH="x86"
fi

PKGPATH="/root/Slackware"
MESA="mesa-11.2.2-$ARCH-1.txz"
MESA32="mesa-compat32-11.2.2-$ARCH-1compat32.txz"
XORG="xorg-1.18.3-$ARCH-2.txz"

if [ -d $PKGPATH ]; then
  if [ `find $PKGPATH -prune -empty -type d` ]; then
    echo "Your $PKGPATH is empty!"
  else
    upgradepkg --reinstall $MESA $XORG
    if [ "COMPAT32" = "yes" ]; then
      upgradepkg --reinstall $MESA32
    fi
  fi
else
  echo "Please create $PKGPATH containing the appropriate packages"
fi
}

usage(){
  echo "Usage:"
  echo " --install		Set up nvidia driver files (only during pkg install)"
  echo " --remove		Return to stock xorg files and remove all symlinks"
  echo " --restore		Reinstall stock Mesa and xorg-server [EXPERIMENTAL]"
  echo " --help			Show this help message"
}

if [ "$1" = '--install' ]; then
  nvidia_install
elif [ "$1" = '--remove' ]; then
  nvidia_remove
elif [ "$1" = '--restore' ]; then
  restore
elif [ "$1" = '--help' ]; then
  usage
else
  usage
fi
