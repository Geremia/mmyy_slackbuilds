#!/bin/sh

# Slackware build script for luxrender

# Copyright 2016  Giorgio Peron <giorgio.peron@gmail.com>, Belluno, Italy
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=luxrender
VERSION=${VERSION:-1.6.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
SRCVERSION=$PRGNAM-lux-b3f85cf7742f
LUXRAYSRCVERSION=$PRGNAM-luxrays-61352e6aae3f

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
# Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}
CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
#  SLKCFLAGS="-O2 -fPIC"
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
rm -rf $LUXRAYSRCVERSION
rm -rf $SRCVERSION
tar xvjf $CWD/$SRCVERSION.tar.bz2
tar xvjf $CWD/v16.tar.bz2

cd $TMP/$LUXRAYSRCVERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# force python3 for boost
patch -Np1 < "$CWD/force_python3_luxray.diff" || true

cmake ./ \
    -DCMAKE_VERBOSE_MAKEFILE=ON  \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DBoost_DEBUG=ON \
    -DLUXRAYS_DISABLE_OPENCL=OFF \
    -DCMAKE_BUILD_TYPE=Release

# this sucks, but luxrays doesn't seem to honor  CMAKE_*_LINKER_FLAGS
for file in `grep lboost_python -l -R ` ;do sed -i 's/$/ -lpython3/' $file ; done

# compile luxrays
make $NUMJOBS luxrays
make $NUMJOBS luxcore
make $NUMJOBS pyluxcore
make $NUMJOBS slg4

# manual installation
mkdir -p $PKG/usr/share/$PRGNAM
cp -r scenes $PKG/usr/share/$PRGNAM
mkdir -p $PKG/usr/{bin,lib$LIBDIRSUFFIX/python3.5}
cp bin/slg4 $PKG/usr/share/$PRGNAM
cp lib/pyluxcore.so $PKG/usr/lib$LIBDIRSUFFIX/python3.5/
cat > $PKG/usr/bin/slg4 << EOF
#!/bin/sh
cd /usr/share/luxrender
./slg4 >/dev/null 2>&1
EOF
chmod +x $PKG/usr/bin/slg4

cd $TMP/$SRCVERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# fix some make files
sed -i "/##########################      Find LuxRays       ##########################/ a\
SET(LuxRays_HOME $TMP/$LUXRAYSRCVERSION)"  cmake/Dependencies.cmake

patch -Np1 < "$CWD/force_python3.diff"

#source /opt/intel/bin/iccvars.sh
#rm -rf CMakeCache.txt CMakeFiles
#CC=/opt/intel/bin/icc CXX=/opt/intel/bin/icpc cmake lux

cmake ./ \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DPYTHON_CUSTOM=ON \
    -DPYTHON_LIBRARIES=/usr/lib/libpython3.5m.so \
    -DPYTHON_INCLUDE_PATH=/usr/include/python3.5m/ \
    -DCMAKE_EXE_LINKER_FLAGS=-lpthread \
    -DCMAKE_BUILD_TYPE=Release

# compile luxrender
make $NUMJOBS luxrender
make install DESTDIR=$PKG

# copy pylux.so
cp pylux.so $PKG/usr/lib$LIBDIRSUFFIX/

# Strip binaries and libraries.
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS.txt \
  COPYING.txt \
  Readme.md \
  License.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
